// <auto-generated> via DuskEntityReplacementBaker
#nullable enable
using UnityEngine;
using Dawn.Utils;
using System.Collections.Generic;
namespace Dusk
{
    [CreateAssetMenu(fileName = "New Enemy Replacement Definition", menuName = $"Entity Replacements/Enemy Replacements/CodeRebirth.src.Content.Enemies.Transporter")]
    public class DuskEntityReplacementDefinition_CodeRebirth_src_Content_Enemies_Transporter : DuskEnemyReplacementDefinition<CodeRebirth.src.Content.Enemies.Transporter>
    {
        [Space(10)]
        public AudioClipsWithTime _idleAudioClips = new();
        public AudioClip? dumpHazardSound = null;
        public AudioClip? hitJimothySound = null;
        public AudioClip? pickUpHazardSound = null;
        public AudioClip? spawnSound = null;
        public AudioClip? dieSFX = null;
        public AudioClip[] engineAndIdleSounds = System.Array.Empty<AudioClip>();
        public AudioClip? potentialCreatureVoice = null;
        public AudioClip? potentialCreatureSFX = null;

        protected override void ApplyTyped(CodeRebirth.src.Content.Enemies.Transporter Transporter)
        {
            CodeRebirth.src.Content.Enemies.Transporter component = Transporter.gameObject.GetComponentInChildren<CodeRebirth.src.Content.Enemies.Transporter>();
            if (this._idleAudioClips.audioClips.Length > 0)
            {
                component._idleAudioClips = this._idleAudioClips;
            }
            if (this.engineAndIdleSounds.Length > 0)
            {
                component.engineAndIdleSounds = this.engineAndIdleSounds;
            }
            if (component.creatureVoice.clip != null && this.potentialCreatureVoice != null)
            {
                component.creatureVoice.clip = this.potentialCreatureVoice;
            }
            if (component.creatureSFX.clip != null && this.potentialCreatureSFX != null)
            {
                component.creatureSFX.clip = this.potentialCreatureSFX;
            }
            if (this.dumpHazardSound != null)
            {
                component.dumpHazardSound = this.dumpHazardSound;
            }
            if (this.hitJimothySound != null)
            {
                component.hitJimothySound = this.hitJimothySound;
            }
            if (this.pickUpHazardSound != null)
            {
                component.pickUpHazardSound = this.pickUpHazardSound;
            }
            if (this.spawnSound != null)
            {
                component.spawnSound = this.spawnSound;
            }
            if (this.dieSFX != null)
            {
                component.dieSFX = this.dieSFX;
            }
        }
    }
}
#nullable disable

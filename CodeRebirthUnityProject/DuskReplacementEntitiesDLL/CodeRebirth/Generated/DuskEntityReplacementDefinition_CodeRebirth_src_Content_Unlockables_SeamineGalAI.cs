// <auto-generated> via DuskEntityReplacementBaker
#nullable enable
using UnityEngine;
using Dawn.Utils;
using System.Collections.Generic;
namespace Dusk
{
    [CreateAssetMenu(fileName = "New Unlockable Replacement Definition", menuName = $"Entity Replacements/Unlockable Replacements/CodeRebirth.src.Content.Unlockables.SeamineGalAI")]
    public class DuskEntityReplacementDefinition_CodeRebirth_src_Content_Unlockables_SeamineGalAI : DuskUnlockableReplacementDefinition<Dusk.DuskUnlockable>
    {
        [Space(10)]
        public AudioClip? explosionSound = null;
        public AudioClip? hazardPingSound = null;
        public AudioClip? rechargeChargesSound = null;
        public AudioClip? spotEnemySound = null;
        public AudioClip? hugSound = null;
        public AudioClip? squeezeFishSound = null;
        public AudioClip? ActivateSound = null;
        public AudioClip? GreetOwnerSound = null;
        public AudioClip? DeactivateSound = null;
        public List<AudioClip> bruceSwimmingAudioClips = new();
        public List<AudioClip> startOrEndRidingBruceAudioClips = new();
        public AudioClip[] IdleSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] HitSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] FootstepSounds = System.Array.Empty<AudioClip>();
        public AudioClip? potentialRidingBruceSource = null;
        public AudioClip? potentialGalVoice = null;
        public AudioClip? potentialGalSFX = null;

        protected override void ApplyTyped(Dusk.DuskUnlockable SeamineGalAI)
        {
            CodeRebirth.src.Content.Unlockables.SeamineGalAI component = SeamineGalAI.gameObject.GetComponentInChildren<CodeRebirth.src.Content.Unlockables.SeamineGalAI>();
            if (this.IdleSounds.Length > 0)
            {
                component.IdleSounds = this.IdleSounds;
            }
            if (this.HitSounds.Length > 0)
            {
                component.HitSounds = this.HitSounds;
            }
            if (this.FootstepSounds.Length > 0)
            {
                component.FootstepSounds = this.FootstepSounds;
            }
            if (component.RidingBruceSource.clip != null && this.potentialRidingBruceSource != null)
            {
                component.RidingBruceSource.clip = this.potentialRidingBruceSource;
            }
            if (component.GalVoice.clip != null && this.potentialGalVoice != null)
            {
                component.GalVoice.clip = this.potentialGalVoice;
            }
            if (component.GalSFX.clip != null && this.potentialGalSFX != null)
            {
                component.GalSFX.clip = this.potentialGalSFX;
            }
            if (this.bruceSwimmingAudioClips.Count > 0)
            {
                component.bruceSwimmingAudioClips = this.bruceSwimmingAudioClips;
            }
            if (this.startOrEndRidingBruceAudioClips.Count > 0)
            {
                component.startOrEndRidingBruceAudioClips = this.startOrEndRidingBruceAudioClips;
            }
            if (this.explosionSound != null)
            {
                component.explosionSound = this.explosionSound;
            }
            if (this.hazardPingSound != null)
            {
                component.hazardPingSound = this.hazardPingSound;
            }
            if (this.rechargeChargesSound != null)
            {
                component.rechargeChargesSound = this.rechargeChargesSound;
            }
            if (this.spotEnemySound != null)
            {
                component.spotEnemySound = this.spotEnemySound;
            }
            if (this.hugSound != null)
            {
                component.hugSound = this.hugSound;
            }
            if (this.squeezeFishSound != null)
            {
                component.squeezeFishSound = this.squeezeFishSound;
            }
            if (this.ActivateSound != null)
            {
                component.ActivateSound = this.ActivateSound;
            }
            if (this.GreetOwnerSound != null)
            {
                component.GreetOwnerSound = this.GreetOwnerSound;
            }
            if (this.DeactivateSound != null)
            {
                component.DeactivateSound = this.DeactivateSound;
            }
        }
    }
}
#nullable disable

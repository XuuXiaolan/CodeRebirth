// <auto-generated> via DuskEntityReplacementBaker
#nullable enable
using UnityEngine;
using Dawn.Utils;
using System.Collections.Generic;
namespace Dusk
{
    [CreateAssetMenu(fileName = "New Enemy Replacement Definition", menuName = $"Entity Replacements/Enemy Replacements/CodeRebirth.src.Content.Enemies.Puppeteer")]
    public class DuskEntityReplacementDefinition_CodeRebirth_src_Content_Enemies_Puppeteer : DuskEnemyReplacementDefinition<CodeRebirth.src.Content.Enemies.Puppeteer>
    {
        [Space(10)]
        public AudioClipsWithTime _idleAudioClips = new();
        public AudioClip? grabPlayerSound = null;
        public AudioClip? makePuppetSound = null;
        public AudioClip? stabSound = null;
        public AudioClip? swipeSound = null;
        public AudioClip? maskDefensiveSound = null;
        public AudioClip? spawnSound = null;
        public AudioClip? dieSFX = null;
        public AudioClip[] normalFootstepSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] combatFootstepSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] reflectSounds = System.Array.Empty<AudioClip>();
        public AudioClip? potentialCreatureVoice = null;
        public AudioClip? potentialCreatureSFX = null;

        protected override void ApplyTyped(CodeRebirth.src.Content.Enemies.Puppeteer Puppeteer)
        {
            CodeRebirth.src.Content.Enemies.Puppeteer component = Puppeteer.gameObject.GetComponentInChildren<CodeRebirth.src.Content.Enemies.Puppeteer>();
            if (this._idleAudioClips.audioClips.Length > 0)
            {
                component._idleAudioClips = this._idleAudioClips;
            }
            if (this.normalFootstepSounds.Length > 0)
            {
                component.normalFootstepSounds = this.normalFootstepSounds;
            }
            if (this.combatFootstepSounds.Length > 0)
            {
                component.combatFootstepSounds = this.combatFootstepSounds;
            }
            if (this.reflectSounds.Length > 0)
            {
                component.reflectSounds = this.reflectSounds;
            }
            if (component.creatureVoice.clip != null && this.potentialCreatureVoice != null)
            {
                component.creatureVoice.clip = this.potentialCreatureVoice;
            }
            if (component.creatureSFX.clip != null && this.potentialCreatureSFX != null)
            {
                component.creatureSFX.clip = this.potentialCreatureSFX;
            }
            if (this.grabPlayerSound != null)
            {
                component.grabPlayerSound = this.grabPlayerSound;
            }
            if (this.makePuppetSound != null)
            {
                component.makePuppetSound = this.makePuppetSound;
            }
            if (this.stabSound != null)
            {
                component.stabSound = this.stabSound;
            }
            if (this.swipeSound != null)
            {
                component.swipeSound = this.swipeSound;
            }
            if (this.maskDefensiveSound != null)
            {
                component.maskDefensiveSound = this.maskDefensiveSound;
            }
            if (this.spawnSound != null)
            {
                component.spawnSound = this.spawnSound;
            }
            if (this.dieSFX != null)
            {
                component.dieSFX = this.dieSFX;
            }
        }
    }
}
#nullable disable

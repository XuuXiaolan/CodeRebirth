// <auto-generated> via DuskEntityReplacementBaker
#nullable enable
using UnityEngine;
using Dawn.Utils;
using System.Collections.Generic;
namespace Dusk
{
    [CreateAssetMenu(fileName = "New Enemy Replacement Definition", menuName = $"Entity Replacements/Enemy Replacements/CodeRebirth.src.Content.Enemies.RabbitMagician")]
    public class DuskEntityReplacementDefinition_CodeRebirth_src_Content_Enemies_RabbitMagician : DuskEnemyReplacementDefinition<CodeRebirth.src.Content.Enemies.RabbitMagician>
    {
        [Space(10)]
        public AudioClipsWithTime _idleAudioClips = new();
        public AudioClip? _spottedFromGroundAudioClip = null;
        public AudioClip? _spottedFromBackAudioClip = null;
        public AudioClip? spawnSound = null;
        public AudioClip? dieSFX = null;
        public AudioClip[] _fallingAudioClips = System.Array.Empty<AudioClip>();
        public AudioClip? potentialCreatureVoice = null;
        public AudioClip? potentialCreatureSFX = null;
        public ParticleSystem? _confettiParticles;

        protected override void ApplyTyped(CodeRebirth.src.Content.Enemies.RabbitMagician RabbitMagician)
        {
            CodeRebirth.src.Content.Enemies.RabbitMagician component = RabbitMagician.gameObject.GetComponentInChildren<CodeRebirth.src.Content.Enemies.RabbitMagician>();
            if (this._idleAudioClips.audioClips.Length > 0)
            {
                component._idleAudioClips = this._idleAudioClips;
            }
            if (this._fallingAudioClips.Length > 0)
            {
                component._fallingAudioClips = this._fallingAudioClips;
            }
            if (component.creatureVoice.clip != null && this.potentialCreatureVoice != null)
            {
                component.creatureVoice.clip = this.potentialCreatureVoice;
            }
            if (component.creatureSFX.clip != null && this.potentialCreatureSFX != null)
            {
                component.creatureSFX.clip = this.potentialCreatureSFX;
            }
            if (this._spottedFromGroundAudioClip != null)
            {
                component._spottedFromGroundAudioClip = this._spottedFromGroundAudioClip;
            }
            if (this._spottedFromBackAudioClip != null)
            {
                component._spottedFromBackAudioClip = this._spottedFromBackAudioClip;
            }
            if (this.spawnSound != null)
            {
                component.spawnSound = this.spawnSound;
            }
            if (this.dieSFX != null)
            {
                component.dieSFX = this.dieSFX;
            }
            if (this._confettiParticles != null)
            {
                ParticleSystem? newParticleSystem = this._confettiParticles;
                ParticleSystem targetParticleSystem = component._confettiParticles;
                if (newParticleSystem != null && targetParticleSystem != null)
                {
                    GameObject newParticle = GameObject.Instantiate(newParticleSystem.gameObject, targetParticleSystem.transform.parent);
                    newParticle.name = targetParticleSystem.gameObject.name;
                    Destroy(targetParticleSystem.gameObject);
                    component._confettiParticles = this._confettiParticles;
                }
            }
        }
    }
}
#nullable disable

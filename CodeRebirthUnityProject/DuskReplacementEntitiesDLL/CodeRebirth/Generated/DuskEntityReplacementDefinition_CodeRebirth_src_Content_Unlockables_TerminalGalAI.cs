// <auto-generated> via DuskEntityReplacementBaker
#nullable enable
using UnityEngine;
using Dawn.Utils;
using System.Collections.Generic;
namespace Dusk
{
    [CreateAssetMenu(fileName = "New Unlockable Replacement Definition", menuName = $"Entity Replacements/Unlockable Replacements/CodeRebirth.src.Content.Unlockables.TerminalGalAI")]
    public class DuskEntityReplacementDefinition_CodeRebirth_src_Content_Unlockables_TerminalGalAI : DuskUnlockableReplacementDefinition<Dusk.DuskUnlockable>
    {
        [Space(10)]
        public AudioClip? scrapPingSound = null;
        public AudioClip? keyboardPressSound = null;
        public AudioClip? zapperSound = null;
        public AudioClip? keySound = null;
        public AudioClip? teleporterSound = null;
        public AudioClip? ActivateSound = null;
        public AudioClip? GreetOwnerSound = null;
        public AudioClip? DeactivateSound = null;
        public List<AudioClip> startOrEndFlyingAudioClips = new();
        public AudioClip[] IdleSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] HitSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] FootstepSounds = System.Array.Empty<AudioClip>();
        public AudioClip? potentialFlyingSource = null;
        public AudioClip? potentialFootstepSource = null;
        public AudioClip? potentialSpecialSource = null;
        public AudioClip? potentialGalVoice = null;
        public AudioClip? potentialGalSFX = null;

        protected override void ApplyTyped(Dusk.DuskUnlockable TerminalGalAI)
        {
            CodeRebirth.src.Content.Unlockables.TerminalGalAI component = TerminalGalAI.gameObject.GetComponentInChildren<CodeRebirth.src.Content.Unlockables.TerminalGalAI>();
            if (this.IdleSounds.Length > 0)
            {
                component.IdleSounds = this.IdleSounds;
            }
            if (this.HitSounds.Length > 0)
            {
                component.HitSounds = this.HitSounds;
            }
            if (this.FootstepSounds.Length > 0)
            {
                component.FootstepSounds = this.FootstepSounds;
            }
            if (component.FlyingSource.clip != null && this.potentialFlyingSource != null)
            {
                component.FlyingSource.clip = this.potentialFlyingSource;
            }
            if (component.FootstepSource.clip != null && this.potentialFootstepSource != null)
            {
                component.FootstepSource.clip = this.potentialFootstepSource;
            }
            if (component.specialSource.clip != null && this.potentialSpecialSource != null)
            {
                component.specialSource.clip = this.potentialSpecialSource;
            }
            if (component.GalVoice.clip != null && this.potentialGalVoice != null)
            {
                component.GalVoice.clip = this.potentialGalVoice;
            }
            if (component.GalSFX.clip != null && this.potentialGalSFX != null)
            {
                component.GalSFX.clip = this.potentialGalSFX;
            }
            if (this.startOrEndFlyingAudioClips.Count > 0)
            {
                component.startOrEndFlyingAudioClips = this.startOrEndFlyingAudioClips;
            }
            if (this.scrapPingSound != null)
            {
                component.scrapPingSound = this.scrapPingSound;
            }
            if (this.keyboardPressSound != null)
            {
                component.keyboardPressSound = this.keyboardPressSound;
            }
            if (this.zapperSound != null)
            {
                component.zapperSound = this.zapperSound;
            }
            if (this.keySound != null)
            {
                component.keySound = this.keySound;
            }
            if (this.teleporterSound != null)
            {
                component.teleporterSound = this.teleporterSound;
            }
            if (this.ActivateSound != null)
            {
                component.ActivateSound = this.ActivateSound;
            }
            if (this.GreetOwnerSound != null)
            {
                component.GreetOwnerSound = this.GreetOwnerSound;
            }
            if (this.DeactivateSound != null)
            {
                component.DeactivateSound = this.DeactivateSound;
            }
        }
    }
}
#nullable disable

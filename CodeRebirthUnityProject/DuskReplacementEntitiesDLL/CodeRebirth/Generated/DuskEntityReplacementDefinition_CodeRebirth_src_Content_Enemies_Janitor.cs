// <auto-generated> via DuskEntityReplacementBaker
#nullable enable
using UnityEngine;
using Dawn.Utils;
using System.Collections.Generic;
namespace Dusk
{
    [CreateAssetMenu(fileName = "New Enemy Replacement Definition", menuName = $"Entity Replacements/Enemy Replacements/CodeRebirth.src.Content.Enemies.Janitor")]
    public class DuskEntityReplacementDefinition_CodeRebirth_src_Content_Enemies_Janitor : DuskEnemyReplacementDefinition<CodeRebirth.src.Content.Enemies.Janitor>
    {
        [Space(10)]
        public AudioClipsWithTime _idleAudioClips = new();
        public AudioClip? spawnSound = null;
        public AudioClip? dieSFX = null;
        public AudioClip[] deathSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] postDeathSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] detectItemDroppedSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] grabPlayerSounds = System.Array.Empty<AudioClip>();
        public AudioClip[] throwPlayerSounds = System.Array.Empty<AudioClip>();
        public AudioClip? potentialCreatureVoice = null;
        public AudioClip? potentialCreatureSFX = null;

        protected override void ApplyTyped(CodeRebirth.src.Content.Enemies.Janitor Janitor)
        {
            CodeRebirth.src.Content.Enemies.Janitor component = Janitor.gameObject.GetComponentInChildren<CodeRebirth.src.Content.Enemies.Janitor>();
            if (this._idleAudioClips.audioClips.Length > 0)
            {
                component._idleAudioClips = this._idleAudioClips;
            }
            if (this.deathSounds.Length > 0)
            {
                component.deathSounds = this.deathSounds;
            }
            if (this.postDeathSounds.Length > 0)
            {
                component.postDeathSounds = this.postDeathSounds;
            }
            if (this.detectItemDroppedSounds.Length > 0)
            {
                component.detectItemDroppedSounds = this.detectItemDroppedSounds;
            }
            if (this.grabPlayerSounds.Length > 0)
            {
                component.grabPlayerSounds = this.grabPlayerSounds;
            }
            if (this.throwPlayerSounds.Length > 0)
            {
                component.throwPlayerSounds = this.throwPlayerSounds;
            }
            if (component.creatureVoice.clip != null && this.potentialCreatureVoice != null)
            {
                component.creatureVoice.clip = this.potentialCreatureVoice;
            }
            if (component.creatureSFX.clip != null && this.potentialCreatureSFX != null)
            {
                component.creatureSFX.clip = this.potentialCreatureSFX;
            }
            if (this.spawnSound != null)
            {
                component.spawnSound = this.spawnSound;
            }
            if (this.dieSFX != null)
            {
                component.dieSFX = this.dieSFX;
            }
        }
    }
}
#nullable disable
